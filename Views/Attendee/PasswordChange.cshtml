@model WebApplicationForDidacticPurpose.MODELS.ViewModels.Attendee.ChangePasswordViewModel
@using WebApplicationForDidacticPurpose.BL.Interfaces

@inject IAttendeeService attendeeService
@{
    ViewData["Title"] = "Change Password";
    var attendee = attendeeService.GetAttendeeByEmail(Model.Email);
}


<section class="d-flex flex-column align-items-center justify-content-center my-5">
    <form method="post" asp-action="PasswordChange" class="form-width-percent">
        <input type="hidden" asp-for="Email" />
     
        <div class="form-floating mb-3">
            <input asp-for="CurrentPassword" id="CurrentPassword" class="form-control" placeholder="CurrentPassword">
            <label asp-for="CurrentPassword" for="CurrentPassword">CurrentPassword</label>
            <span class="text-danger">@Html.ValidationMessageFor(a => a.CurrentPassword)</span>
        </div>
        <div class="form-floating mb-3">
            <input asp-for="NewPassword" id="NewPassword" class="form-control" placeholder="NewPassword">
            <label asp-for="NewPassword" for="NewPassword">NewPassword</label>
            <span class="text-danger">@Html.ValidationMessageFor(a => a.NewPassword)</span>
        </div>

        <div class="form-floating mb-3">
            <input asp-for="ConfirmPassword" id="ConfirmPassword" class="form-control" placeholder="ConfirmPassword">
            <label asp-for="ConfirmPassword" for="ConfirmPassword">ConfirmPassword</label>
            <span class="text-danger">@Html.ValidationMessageFor(a => a.ConfirmPassword)</span>
        </div>


        <div class="row">
            <div class="col">
                <button type="submit" class="btn btn-primary form-control">Save Changes</button>
            </div>
            <div class="col">
                <a asp-action="MyAccount" asp-route-attendeeId="@attendee.AttendeeId" class="btn btn-secondary form-control">Back to account</a>
            </div>
        </div>

    </form>

</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
